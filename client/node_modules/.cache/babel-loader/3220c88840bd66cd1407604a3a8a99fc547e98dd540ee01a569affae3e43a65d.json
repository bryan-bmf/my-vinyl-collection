{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/ArtistTable.tsx\",\n  _s = $RefreshSig$();\nimport { Table, TableContainer, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useState } from \"react\";\nimport { artistData } from \"./seed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistTable = () => {\n  _s();\n  const [artists, setArtists] = useState(artistData);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortField, setSortField] = useState(\"\");\n\n  // const url =\n  // \t\"https://sheets.googleapis.com/v4/spreadsheets/1ihTMg293oX-0F5ujBPRkN2rfCg9o1l1yLZWeBgW9rSw/values/Sheet1!A:H?majorDimension=ROWS&key=AIzaSyC8KA4Chg1gzz6mvhp-4pH5mE03b49Js5U\";\n  // const fetchData = async (controller: AbortController) => {\n  // \tconst resp = await fetch(url, {\n  // \t\tsignal: controller.signal,\n  // \t});\n\n  // \tif (!resp.ok) throw new Error(\"Explotó\");\n\n  // \tconst respData = await resp.json();\n  // \tsetArtists(respData);\n  // \tconsole.log(respData)\n  // };\n\n  // useEffect(() => {\n  // \tlet controller = new AbortController();\n\n  // \tfetchData(controller);\n\n  // \treturn () => controller?.abort();\n  // }, []);\n\n  // let list = artists?.values.slice(1).map((current: string, index: number) => (\n  // \t<Tr key={current[7]}>\n  // \t\t<Td isNumeric>{index + 1}</Td>\n  // \t\t<Td>{current[0]}</Td>\n  // \t\t<Td>{current[1]}</Td>\n  // \t\t<Td>{current[2]}</Td>\n  // \t\t<Td isNumeric>{current[3]}</Td>\n  // \t\t<Td>{current[4]}</Td>\n  // \t\t<Td>{current[5]}</Td>\n  // \t\t<Td isNumeric>{current[6]}</Td>\n  // \t</Tr>\n  // ));\n\n  let list = artists === null || artists === void 0 ? void 0 : artists.values.slice(1).map((current, index) => /*#__PURE__*/_jsxDEV(Tr, {\n    children: [/*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: current[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current[5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: current[6]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, current[7], true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this));\n  const handleSort = event => {\n    console.log(\"event\", event.target.textContent);\n    setSortField(event.target.textContent);\n\n    // const sortedRecipes = recipes.sort((a, b) => {\n    //   if (sortOrder === \"asc\") {\n    // \tsetSortOrder(\"desc\");\n    // \treturn a[sortField.toLowerCase()] < b[sortField.toLowerCase()] ? 1 : -1;\n    //   } else {\n    // \tsetSortOrder(\"asc\");\n    // \treturn a[sortField.toLowerCase()] > b[sortField.toLowerCase()] ? 1 : -1;\n    //   }\n    // });\n    // setRecipes(sortedRecipes);\n  };\n  const columns = [\"#\", \"Artist\", \"Album\", \"Genre\", \"Year\", \"Language\", \"Location\", \"Purchased\"];\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"striped\",\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(Th, {\n            onClick: handleSort,\n            children: [column, /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: 4 + \"px\"\n              },\n              children: sortField === column ? sortOrder === \"asc\" ? /*#__PURE__*/_jsxDEV(TriangleUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 12\n              }, this) : /*#__PURE__*/_jsxDEV(TriangleDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 12\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, column, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n_s(ArtistTable, \"s+4qErDg7o+qGA6llGbMYmu0ioQ=\");\n_c = ArtistTable;\nexport default ArtistTable;\nvar _c;\n$RefreshReg$(_c, \"ArtistTable\");","map":{"version":3,"names":["Table","TableContainer","Tbody","Td","Th","Thead","Tr","React","TriangleDownIcon","TriangleUpIcon","useState","artistData","jsxDEV","_jsxDEV","ArtistTable","_s","artists","setArtists","sortOrder","setSortOrder","sortField","setSortField","list","values","slice","map","current","index","children","isNumeric","fileName","_jsxFileName","lineNumber","columnNumber","handleSort","event","console","log","target","textContent","columns","variant","size","column","onClick","style","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/ArtistTable.tsx"],"sourcesContent":["import {\n\tTable,\n\tTableContainer,\n\tTbody,\n\tTd,\n\tTfoot,\n\tTh,\n\tThead,\n\tTr,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\n\nimport { artistData } from \"./seed\";\n\nconst ArtistTable = () => {\n\tconst [artists, setArtists] = useState<AnyObject>(artistData);\n\tconst [sortOrder, setSortOrder] = useState<string>(\"asc\");\n\tconst [sortField, setSortField] = useState<string>(\"\");\n\n\t// const url =\n\t// \t\"https://sheets.googleapis.com/v4/spreadsheets/1ihTMg293oX-0F5ujBPRkN2rfCg9o1l1yLZWeBgW9rSw/values/Sheet1!A:H?majorDimension=ROWS&key=AIzaSyC8KA4Chg1gzz6mvhp-4pH5mE03b49Js5U\";\n\t// const fetchData = async (controller: AbortController) => {\n\t// \tconst resp = await fetch(url, {\n\t// \t\tsignal: controller.signal,\n\t// \t});\n\n\t// \tif (!resp.ok) throw new Error(\"Explotó\");\n\n\t// \tconst respData = await resp.json();\n\t// \tsetArtists(respData);\n\t// \tconsole.log(respData)\n\t// };\n\n\t// useEffect(() => {\n\t// \tlet controller = new AbortController();\n\n\t// \tfetchData(controller);\n\n\t// \treturn () => controller?.abort();\n\t// }, []);\n\n\t// let list = artists?.values.slice(1).map((current: string, index: number) => (\n\t// \t<Tr key={current[7]}>\n\t// \t\t<Td isNumeric>{index + 1}</Td>\n\t// \t\t<Td>{current[0]}</Td>\n\t// \t\t<Td>{current[1]}</Td>\n\t// \t\t<Td>{current[2]}</Td>\n\t// \t\t<Td isNumeric>{current[3]}</Td>\n\t// \t\t<Td>{current[4]}</Td>\n\t// \t\t<Td>{current[5]}</Td>\n\t// \t\t<Td isNumeric>{current[6]}</Td>\n\t// \t</Tr>\n\t// ));\n\n\tlet list = artists?.values.slice(1).map((current: string, index: number) => (\n\t\t<Tr key={current[7]}>\n\t\t\t<Td isNumeric>{index + 1}</Td>\n\t\t\t<Td>{current[0]}</Td>\n\t\t\t<Td>{current[1]}</Td>\n\t\t\t<Td>{current[2]}</Td>\n\t\t\t<Td isNumeric>{current[3]}</Td>\n\t\t\t<Td>{current[4]}</Td>\n\t\t\t<Td>{current[5]}</Td>\n\t\t\t<Td isNumeric>{current[6]}</Td>\n\t\t</Tr>\n\t));\n\n\tconst handleSort = (event: any) => {\n\t\tconsole.log(\"event\", event.target.textContent);\n\n\t\tsetSortField(event.target.textContent);\n\n\t\t// const sortedRecipes = recipes.sort((a, b) => {\n\t\t//   if (sortOrder === \"asc\") {\n\t\t// \tsetSortOrder(\"desc\");\n\t\t// \treturn a[sortField.toLowerCase()] < b[sortField.toLowerCase()] ? 1 : -1;\n\t\t//   } else {\n\t\t// \tsetSortOrder(\"asc\");\n\t\t// \treturn a[sortField.toLowerCase()] > b[sortField.toLowerCase()] ? 1 : -1;\n\t\t//   }\n\t\t// });\n\t\t// setRecipes(sortedRecipes);\n\t};\n\n\tconst columns = [\n\t\t\"#\",\n\t\t\"Artist\",\n\t\t\"Album\",\n\t\t\"Genre\",\n\t\t\"Year\",\n\t\t\"Language\",\n\t\t\"Location\",\n\t\t\"Purchased\",\n\t];\n\n\treturn (\n\t\t<TableContainer>\n\t\t\t<Table variant=\"striped\" size=\"sm\">\n\t\t\t\t<Thead>\n\t\t\t\t\t<Tr>\n\t\t\t\t\t\t{/* <Th isNumeric>#</Th>\n\t\t\t\t\t\t<Th>Artist</Th>\n\t\t\t\t\t\t<Th>Album</Th>\n\t\t\t\t\t\t<Th>Genre</Th>\n\t\t\t\t\t\t<Th isNumeric>Year</Th>\n\t\t\t\t\t\t<Th>Language</Th>\n\t\t\t\t\t\t<Th>Location</Th>\n\t\t\t\t\t\t<Th isNumeric>Purchased</Th> */}\n\t\t\t\t\t\t{columns.map((column) => (\n\t\t\t\t\t\t\t<Th key={column} onClick={handleSort}>\n\t\t\t\t\t\t\t\t{column}\n\t\t\t\t\t\t\t\t<span style={{ paddingLeft: 4 + \"px\" }}>\n\t\t\t\t\t\t\t\t\t{sortField === column ? (\n\t\t\t\t\t\t\t\t\t\tsortOrder === \"asc\" ? (\n\t\t\t\t\t\t\t\t\t\t\t<TriangleUpIcon />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<TriangleDownIcon />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tr>\n\t\t\t\t</Thead>\n\t\t\t\t<Tbody>{list}</Tbody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\ninterface AnyObject {\n\t[key: string]: any;\n}\n\nexport default ArtistTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}