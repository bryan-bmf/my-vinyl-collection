{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/Charts.tsx\",\n  _s = $RefreshSig$();\nimport { PieChart, Pie, Cell, Tooltip } from \"recharts\";\nimport { artistData } from \"../data/seed\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [data, setData] = useState(artistData);\n  let colors = [\"#2f4f4f\", \"#2e8b57\", \"#8b0000\", \"#808000\", \"#000080\", \"#ff0000\", \"#ff8c00\", \"#7fff00\", \"#ba55d3\", \"#00ffff\", \"#0000ff\", \"#f08080\", \"#ff00ff\", \"#1e90ff\", \"#ffff54\", \"#dda0dd\", \"#ff1493\", \"#f5deb3\", \"#98fb98\", \"#808080\", \"#000000\"];\n  const idiomas = [{\n    name: \"Español\",\n    value: 58\n  }, {\n    name: \"Inglés\",\n    value: 221\n  }, {\n    name: \"Japonés\",\n    value: 4\n  }];\n  const data02 = [{\n    name: \"Group A\",\n    value: 2400\n  }, {\n    name: \"Group B\",\n    value: 4567\n  }, {\n    name: \"Group C\",\n    value: 1398\n  }, {\n    name: \"Group D\",\n    value: 9800\n  }, {\n    name: \"Group E\",\n    value: 3908\n  }, {\n    name: \"Group F\",\n    value: 4800\n  }];\n  const shuffle = array => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex > 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  useEffect(() => {\n    console.log(colors);\n    shuffle(colors);\n    console.log(colors);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 1000,\n    height: 400,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      dataKey: \"value\",\n      isAnimationActive: false,\n      data: idiomas,\n      cx: 200,\n      cy: 200,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      label: true,\n      children: idiomas.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: colors[index % colors.length]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n};\n_s(Charts, \"x23vtgDdZ339/Wb0P5vueRLl6Yc=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["PieChart","Pie","Cell","Tooltip","artistData","useEffect","useState","jsxDEV","_jsxDEV","Charts","_s","data","setData","colors","idiomas","name","value","data02","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","console","log","width","height","children","dataKey","isAnimationActive","cx","cy","outerRadius","fill","label","map","entry","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/Charts.tsx"],"sourcesContent":["import { PieChart, Pie, Cell, Tooltip } from \"recharts\";\nimport { artistData } from \"../data/seed\";\nimport { AnyObject } from \"../types\";\nimport { useEffect, useState } from \"react\";\n\nconst Charts = () => {\n\tconst [data, setData] = useState<Array<AnyObject>>(artistData);\n\n\tlet colors: any = [\n\t\t\"#2f4f4f\",\n\t\t\"#2e8b57\",\n\t\t\"#8b0000\",\n\t\t\"#808000\",\n\t\t\"#000080\",\n\t\t\"#ff0000\",\n\t\t\"#ff8c00\",\n\t\t\"#7fff00\",\n\t\t\"#ba55d3\",\n\t\t\"#00ffff\",\n\t\t\"#0000ff\",\n\t\t\"#f08080\",\n\t\t\"#ff00ff\",\n\t\t\"#1e90ff\",\n\t\t\"#ffff54\",\n\t\t\"#dda0dd\",\n\t\t\"#ff1493\",\n\t\t\"#f5deb3\",\n\t\t\"#98fb98\",\n\t\t\"#808080\",\n\t\t\"#000000\",\n\t];\n\n\tconst idiomas = [\n\t\t{ name: \"Español\", value: 58 },\n\t\t{ name: \"Inglés\", value: 221 },\n\t\t{ name: \"Japonés\", value: 4 },\n\t];\n\n\tconst data02 = [\n\t\t{ name: \"Group A\", value: 2400 },\n\t\t{ name: \"Group B\", value: 4567 },\n\t\t{ name: \"Group C\", value: 1398 },\n\t\t{ name: \"Group D\", value: 9800 },\n\t\t{ name: \"Group E\", value: 3908 },\n\t\t{ name: \"Group F\", value: 4800 },\n\t];\n\n\tconst shuffle = (array: any) => {\n\t\tlet currentIndex = array.length,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle.\n\t\twhile (currentIndex > 0) {\n\t\t\t// Pick a remaining element.\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\n\t\t\t// And swap it with the current element.\n\t\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\t\tarray[randomIndex],\n\t\t\t\tarray[currentIndex],\n\t\t\t];\n\t\t}\n\n\t\treturn array;\n\t};\n\n    useEffect(() => {\n        console.log(colors)\n        shuffle(colors)\n        console.log(colors)\n    }, []);\n\n\treturn (\n\t\t<PieChart width={1000} height={400}>\n\t\t\t<Pie\n\t\t\t\tdataKey=\"value\"\n\t\t\t\tisAnimationActive={false}\n\t\t\t\tdata={idiomas}\n\t\t\t\tcx={200}\n\t\t\t\tcy={200}\n\t\t\t\touterRadius={80}\n\t\t\t\tfill=\"#8884d8\"\n\t\t\t\tlabel\n\t\t\t>\n\t\t\t\t{idiomas.map((entry, index) => (\n\t\t\t\t\t<Cell fill={colors[index % colors.length]} />\n\t\t\t\t))}\n\t\t\t</Pie>\n\t\t\t<Tooltip />\n\t\t</PieChart>\n\t);\n};\n\nexport default Charts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}