{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { Box, Image, Text, useDisclosure } from \"@chakra-ui/react\";\nimport PlayerModal from \"./PlayerModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumCover = props => {\n  _s();\n  const [data, setData] = useState(artistData);\n  const [selectedAlbum, setSelectedAlbum] = useState();\n\n  // modal disclosure\n  const {\n    isOpen: isOpen,\n    onOpen: openPlayer,\n    onClose: handleClosePlayer\n  } = useDisclosure();\n\n  //set selected album as a state to pass it along to the modal\n  const handleOpenPlayer = album => {\n    setSelectedAlbum(album);\n    openPlayer();\n  };\n  let res = data.map(current => /*#__PURE__*/_jsxDEV(Box, {\n    padding: \"4px\",\n    onClick: () => handleOpenPlayer({\n      spotifyAlbumId: current.spotifyAlbumId,\n      isAlbum: current.isAlbum\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: current.coverArt,\n      alt: current.coverArt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"md\",\n      children: current.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"sm\",\n      children: current.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PlayerModal, {\n      album: selectedAlbum,\n      modalDisclosure: {\n        isOpen: isOpen,\n        onOpen: handleOpenPlayer,\n        onClose: handleClosePlayer\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, current.spotifyAlbumId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this));\n\n  //pa que typescript no joda\n  return res;\n};\n_s(AlbumCover, \"eZA9KxwskbyFgQsLhIGx/5Vh59g=\", false, function () {\n  return [useDisclosure];\n});\n_c = AlbumCover;\nexport default AlbumCover;\nvar _c;\n$RefreshReg$(_c, \"AlbumCover\");","map":{"version":3,"names":["useState","artistData","Box","Image","Text","useDisclosure","PlayerModal","jsxDEV","_jsxDEV","AlbumCover","props","_s","data","setData","selectedAlbum","setSelectedAlbum","isOpen","onOpen","openPlayer","onClose","handleClosePlayer","handleOpenPlayer","album","res","map","current","padding","onClick","spotifyAlbumId","isAlbum","children","src","coverArt","alt","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","artist","modalDisclosure","_c","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { AnyObject } from \"../types\";\nimport { Badge, Box, Card, Image, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Spotify } from \"react-spotify-embed\";\nimport PlayerModal from \"./PlayerModal\";\n\nconst AlbumCover = (props: any) => {\n\tconst [data, setData] = useState<Array<AnyObject>>(artistData);\n\tconst [selectedAlbum, setSelectedAlbum] = useState<AnyObject>();\n\n\t// modal disclosure\n\tconst {\n\t\tisOpen: isOpen,\n\t\tonOpen: openPlayer,\n\t\tonClose: handleClosePlayer,\n\t} = useDisclosure();\n\n\t//set selected album as a state to pass it along to the modal\n\tconst handleOpenPlayer = (album: AnyObject) => {\n\t\tsetSelectedAlbum(album);\n\t\topenPlayer();\n\t};\n\n\tlet res = data.map((current) => (\n\t\t\t<Box\n\t\t\t\tkey={current.spotifyAlbumId}\n\t\t\t\tpadding=\"4px\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\thandleOpenPlayer({\n\t\t\t\t\t\tspotifyAlbumId: current.spotifyAlbumId,\n\t\t\t\t\t\tisAlbum: current.isAlbum,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Image src={current.coverArt} alt={current.coverArt} />\n\t\t\t\t<Text fontSize=\"md\">{current.album}</Text>\n\t\t\t\t<Text fontSize=\"sm\">{current.artist}</Text>\n\t\t\t\t<PlayerModal album={selectedAlbum} modalDisclosure={{ isOpen: isOpen, onOpen: handleOpenPlayer, onClose: handleClosePlayer }} />\n\t\t\t</Box>\n\t));\n\n\t//pa que typescript no joda\n\treturn res;\n};\n\nexport default AlbumCover;\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAAgBC,GAAG,EAAQC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAG/E,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAmBC,UAAU,CAAC;EAC9D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAY,CAAC;;EAE/D;EACA,MAAM;IACLgB,MAAM,EAAEA,MAAM;IACdC,MAAM,EAAEC,UAAU;IAClBC,OAAO,EAAEC;EACV,CAAC,GAAGf,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMgB,gBAAgB,GAAIC,KAAgB,IAAK;IAC9CP,gBAAgB,CAACO,KAAK,CAAC;IACvBJ,UAAU,CAAC,CAAC;EACb,CAAC;EAED,IAAIK,GAAG,GAAGX,IAAI,CAACY,GAAG,CAAEC,OAAO,iBACzBjB,OAAA,CAACN,GAAG;IAEHwB,OAAO,EAAC,KAAK;IACbC,OAAO,EAAEA,CAAA,KACRN,gBAAgB,CAAC;MAChBO,cAAc,EAAEH,OAAO,CAACG,cAAc;MACtCC,OAAO,EAAEJ,OAAO,CAACI;IAClB,CAAC,CACD;IAAAC,QAAA,gBAEDtB,OAAA,CAACL,KAAK;MAAC4B,GAAG,EAAEN,OAAO,CAACO,QAAS;MAACC,GAAG,EAAER,OAAO,CAACO;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD7B,OAAA,CAACJ,IAAI;MAACkC,QAAQ,EAAC,IAAI;MAAAR,QAAA,EAAEL,OAAO,CAACH;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C7B,OAAA,CAACJ,IAAI;MAACkC,QAAQ,EAAC,IAAI;MAAAR,QAAA,EAAEL,OAAO,CAACc;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3C7B,OAAA,CAACF,WAAW;MAACgB,KAAK,EAAER,aAAc;MAAC0B,eAAe,EAAE;QAAExB,MAAM,EAAEA,MAAM;QAAEC,MAAM,EAAEI,gBAAgB;QAAEF,OAAO,EAAEC;MAAkB;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAZ3HZ,OAAO,CAACG,cAAc;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAavB,CACN,CAAC;;EAEF;EACA,OAAOd,GAAG;AACX,CAAC;AAACZ,EAAA,CArCIF,UAAU;EAAA,QASXJ,aAAa;AAAA;AAAAoC,EAAA,GATZhC,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}