{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { Box, useDisclosure } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlbumCover = props => {\n  _s();\n  const [data, setData] = useState(artistData);\n  const [selectedAlbum, setSelectedAlbum] = useState();\n\n  // modal disclosure\n  const {\n    isOpen: isOpen,\n    onOpen: openPlayer,\n    onClose: handleClosePlayer\n  } = useDisclosure();\n\n  //set selected album as a state to pass it along to the modal\n  const handleOpenPlayer = album => {\n    setSelectedAlbum(album);\n    openPlayer();\n  };\n  let res = data.map(current => /*#__PURE__*/_jsxDEV(Box, {\n    padding: \"4px\",\n    onClick: () => handleOpenPlayer({\n      spotifyAlbumId: current.spotifyAlbumId,\n      isAlbum: current.isAlbum\n    })\n  }, current.spotifyAlbumId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this));\n\n  //pa que typescript no joda\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: res\n  }, void 0, false);\n};\n_s(AlbumCover, \"eZA9KxwskbyFgQsLhIGx/5Vh59g=\", false, function () {\n  return [useDisclosure];\n});\n_c = AlbumCover;\nexport default AlbumCover;\nvar _c;\n$RefreshReg$(_c, \"AlbumCover\");","map":{"version":3,"names":["useState","artistData","Box","useDisclosure","jsxDEV","_jsxDEV","Fragment","_Fragment","AlbumCover","props","_s","data","setData","selectedAlbum","setSelectedAlbum","isOpen","onOpen","openPlayer","onClose","handleClosePlayer","handleOpenPlayer","album","res","map","current","padding","onClick","spotifyAlbumId","isAlbum","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { AnyObject } from \"../types\";\nimport { Badge, Box, Card, Image, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Spotify } from \"react-spotify-embed\";\nimport PlayerModal from \"./PlayerModal\";\n\nconst AlbumCover = (props: any) => {\n\tconst [data, setData] = useState<Array<AnyObject>>(artistData);\n\tconst [selectedAlbum, setSelectedAlbum] = useState<AnyObject>();\n\n\t// modal disclosure\n\tconst {\n\t\tisOpen: isOpen,\n\t\tonOpen: openPlayer,\n\t\tonClose: handleClosePlayer,\n\t} = useDisclosure();\n\n\t//set selected album as a state to pass it along to the modal\n\tconst handleOpenPlayer = (album: AnyObject) => {\n\t\tsetSelectedAlbum(album);\n\t\topenPlayer();\n\t};\n\n\tlet res = data.map((current) => (\n\t\t\t<Box\n\t\t\t\tkey={current.spotifyAlbumId}\n\t\t\t\tpadding=\"4px\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\thandleOpenPlayer({\n\t\t\t\t\t\tspotifyAlbumId: current.spotifyAlbumId,\n\t\t\t\t\t\tisAlbum: current.isAlbum,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{/* <Image src={current.coverArt} alt={current.coverArt} />\n\t\t\t\t<Text fontSize=\"md\">{current.album}</Text>\n\t\t\t\t<Text fontSize=\"sm\">{current.artist}</Text> */}\n\t\t\t\t{/* <PlayerModal album={selectedAlbum} modalDisclosure={{ isOpen: isOpen, onOpen: handleOpenPlayer, onClose: handleClosePlayer }} /> */}\n\t\t\t</Box>\n\t));\n\n\t//pa que typescript no joda\n\treturn <>{res}</>;\n};\n\nexport default AlbumCover;\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAAgBC,GAAG,EAAqBC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKhF,MAAMC,UAAU,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAmBC,UAAU,CAAC;EAC9D,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAY,CAAC;;EAE/D;EACA,MAAM;IACLe,MAAM,EAAEA,MAAM;IACdC,MAAM,EAAEC,UAAU;IAClBC,OAAO,EAAEC;EACV,CAAC,GAAGhB,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMiB,gBAAgB,GAAIC,KAAgB,IAAK;IAC9CP,gBAAgB,CAACO,KAAK,CAAC;IACvBJ,UAAU,CAAC,CAAC;EACb,CAAC;EAED,IAAIK,GAAG,GAAGX,IAAI,CAACY,GAAG,CAAEC,OAAO,iBACzBnB,OAAA,CAACH,GAAG;IAEHuB,OAAO,EAAC,KAAK;IACbC,OAAO,EAAEA,CAAA,KACRN,gBAAgB,CAAC;MAChBO,cAAc,EAAEH,OAAO,CAACG,cAAc;MACtCC,OAAO,EAAEJ,OAAO,CAACI;IAClB,CAAC;EACD,GAPIJ,OAAO,CAACG,cAAc;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAavB,CACN,CAAC;;EAEF;EACA,oBAAO3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,EAAGX;EAAG,gBAAG,CAAC;AAClB,CAAC;AAACZ,EAAA,CArCIF,UAAU;EAAA,QASXL,aAAa;AAAA;AAAA+B,EAAA,GATZ1B,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}