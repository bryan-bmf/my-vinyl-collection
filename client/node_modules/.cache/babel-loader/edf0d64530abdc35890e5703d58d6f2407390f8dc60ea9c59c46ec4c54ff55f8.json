{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { Box, Image, Text, useDisclosure } from \"@chakra-ui/react\";\nimport PlayerModal from \"./PlayerModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlbumCover = props => {\n  _s();\n  const [data, setData] = useState(artistData);\n  const [selectedAlbum, setSelectedAlbum] = useState();\n\n  // modal disclosure\n  const {\n    isOpen: isOpen,\n    onOpen: openPlayer,\n    onClose: handleClosePlayer\n  } = useDisclosure();\n\n  //set selected album as a state to pass it along to the modal\n  const handleOpenPlayer = album => {\n    setSelectedAlbum(album);\n    openPlayer();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data.map(current => /*#__PURE__*/_jsxDEV(Box, {\n      sx: sx.link,\n      padding: \"4px\",\n      onClick: () => handleOpenPlayer({\n        spotifyAlbumId: current.spotifyAlbumId,\n        isAlbum: current.isAlbum\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: current.coverArt,\n        alt: current.coverArt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"md\",\n        as: \"b\",\n        children: current.album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"sm\",\n        children: current.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)]\n    }, current.spotifyAlbumId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(PlayerModal, {\n      album: selectedAlbum,\n      modalDisclosure: {\n        isOpen: isOpen,\n        onOpen: handleOpenPlayer,\n        onClose: handleClosePlayer\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(AlbumCover, \"eZA9KxwskbyFgQsLhIGx/5Vh59g=\", false, function () {\n  return [useDisclosure];\n});\n_c = AlbumCover;\nconst sx = {\n  link: {\n    textDecoration: \"underline\",\n    cursor: \"pointer\"\n  }\n};\nexport default AlbumCover;\nvar _c;\n$RefreshReg$(_c, \"AlbumCover\");","map":{"version":3,"names":["useState","artistData","Box","Image","Text","useDisclosure","PlayerModal","jsxDEV","_jsxDEV","Fragment","_Fragment","AlbumCover","props","_s","data","setData","selectedAlbum","setSelectedAlbum","isOpen","onOpen","openPlayer","onClose","handleClosePlayer","handleOpenPlayer","album","children","map","current","sx","link","padding","onClick","spotifyAlbumId","isAlbum","src","coverArt","alt","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","as","artist","modalDisclosure","_c","textDecoration","cursor","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/AlbumCover.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { artistData } from \"../data/seed\";\nimport { AnyObject } from \"../types\";\nimport { Badge, Box, Card, Image, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Spotify } from \"react-spotify-embed\";\nimport PlayerModal from \"./PlayerModal\";\n\nconst AlbumCover = (props: any) => {\n\tconst [data, setData] = useState<Array<AnyObject>>(artistData);\n\tconst [selectedAlbum, setSelectedAlbum] = useState<AnyObject>();\n\n\t// modal disclosure\n\tconst {\n\t\tisOpen: isOpen,\n\t\tonOpen: openPlayer,\n\t\tonClose: handleClosePlayer,\n\t} = useDisclosure();\n\n\t//set selected album as a state to pass it along to the modal\n\tconst handleOpenPlayer = (album: AnyObject) => {\n\t\tsetSelectedAlbum(album);\n\t\topenPlayer();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{data.map((current) => (\n\t\t\t\t<Box\n\t\t\t\t\tkey={current.spotifyAlbumId}\n\t\t\t\t\tsx={sx.link}\n\t\t\t\t\tpadding=\"4px\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\thandleOpenPlayer({\n\t\t\t\t\t\t\tspotifyAlbumId: current.spotifyAlbumId,\n\t\t\t\t\t\t\tisAlbum: current.isAlbum,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Image src={current.coverArt} alt={current.coverArt} />\n\t\t\t\t\t<Text fontSize=\"md\" as=\"b\">{current.album}</Text>\n\t\t\t\t\t<Text fontSize=\"sm\">{current.artist}</Text>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t\t{/* Modal */}\n\t\t\t<PlayerModal\n\t\t\t\talbum={selectedAlbum}\n\t\t\t\tmodalDisclosure={{\n\t\t\t\t\tisOpen: isOpen,\n\t\t\t\t\tonOpen: handleOpenPlayer,\n\t\t\t\t\tonClose: handleClosePlayer,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nconst sx = {\n\tlink: {\n\t\ttextDecoration: \"underline\",\n\t\tcursor: \"pointer\"\n\t}\n};\n\nexport default AlbumCover;\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAAgBC,GAAG,EAAQC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAG/E,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,UAAU,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAmBC,UAAU,CAAC;EAC9D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAY,CAAC;;EAE/D;EACA,MAAM;IACLkB,MAAM,EAAEA,MAAM;IACdC,MAAM,EAAEC,UAAU;IAClBC,OAAO,EAAEC;EACV,CAAC,GAAGjB,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMkB,gBAAgB,GAAIC,KAAgB,IAAK;IAC9CP,gBAAgB,CAACO,KAAK,CAAC;IACvBJ,UAAU,CAAC,CAAC;EACb,CAAC;EAED,oBACCZ,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACEX,IAAI,CAACY,GAAG,CAAEC,OAAO,iBACjBnB,OAAA,CAACN,GAAG;MAEH0B,EAAE,EAAEA,EAAE,CAACC,IAAK;MACZC,OAAO,EAAC,KAAK;MACbC,OAAO,EAAEA,CAAA,KACRR,gBAAgB,CAAC;QAChBS,cAAc,EAAEL,OAAO,CAACK,cAAc;QACtCC,OAAO,EAAEN,OAAO,CAACM;MAClB,CAAC,CACD;MAAAR,QAAA,gBAEDjB,OAAA,CAACL,KAAK;QAAC+B,GAAG,EAAEP,OAAO,CAACQ,QAAS;QAACC,GAAG,EAAET,OAAO,CAACQ;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDhC,OAAA,CAACJ,IAAI;QAACqC,QAAQ,EAAC,IAAI;QAACC,EAAE,EAAC,GAAG;QAAAjB,QAAA,EAAEE,OAAO,CAACH;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDhC,OAAA,CAACJ,IAAI;QAACqC,QAAQ,EAAC,IAAI;QAAAhB,QAAA,EAAEE,OAAO,CAACgB;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAZtCb,OAAO,CAACK,cAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAavB,CACL,CAAC,eAEFhC,OAAA,CAACF,WAAW;MACXkB,KAAK,EAAER,aAAc;MACrB4B,eAAe,EAAE;QAChB1B,MAAM,EAAEA,MAAM;QACdC,MAAM,EAAEI,gBAAgB;QACxBF,OAAO,EAAEC;MACV;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACD,CAAC;AAEL,CAAC;AAAC3B,EAAA,CA/CIF,UAAU;EAAA,QASXN,aAAa;AAAA;AAAAwC,EAAA,GATZlC,UAAU;AAiDhB,MAAMiB,EAAE,GAAG;EACVC,IAAI,EAAE;IACLiB,cAAc,EAAE,WAAW;IAC3BC,MAAM,EAAE;EACT;AACD,CAAC;AAED,eAAepC,UAAU;AAAC,IAAAkC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}