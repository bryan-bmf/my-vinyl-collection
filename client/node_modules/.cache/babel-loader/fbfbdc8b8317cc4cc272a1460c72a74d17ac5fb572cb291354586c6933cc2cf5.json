{"ast":null,"code":"var _jsxFileName = \"/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/ArtistTable.tsx\",\n  _s = $RefreshSig$();\nimport { Table, TableContainer, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useState } from \"react\";\nimport { artistData } from \"./seed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistTable = () => {\n  _s();\n  const [artists, setArtists] = useState(artistData);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortField, setSortField] = useState(\"\");\n  const columns = [\"#\", \"Artist\", \"Album\", \"Genre\", \"Year\", \"Language\", \"Location\", \"Purchased\"];\n\n  // const fetchData = async (controller: AbortController) => {\n  // \tconst resp = await fetch(url, {\n  // \t\tsignal: controller.signal,\n  // \t});\n\n  // \tif (!resp.ok) throw new Error(\"Explotó\");\n\n  // \tconst respData = await resp.json();\n  // \tsetArtists(respData);\n  // \tconsole.log(respData)\n  // };\n\n  // useEffect(() => {\n  // \tlet controller = new AbortController();\n\n  // \tfetchData(controller);\n\n  // \treturn () => controller?.abort();\n  // }, []);\n\n  let list = artists === null || artists === void 0 ? void 0 : artists.map((current, index) => /*#__PURE__*/_jsxDEV(Tr, {\n    children: [/*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current.genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: current.year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current.language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      children: current.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Td, {\n      isNumeric: true,\n      children: current.purchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, current.spotifyAlbumId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this));\n  const handleSort = event => {\n    console.log(\"event\", event.target.textContent);\n    setSortField(event.target.textContent);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"striped\",\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(Th, {\n            onClick: handleSort,\n            style: {\n              \"cursor\": \"pointer\"\n            },\n            children: [column, /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: 4 + \"px\"\n              },\n              children: sortField === column ? sortOrder === \"asc\" ? /*#__PURE__*/_jsxDEV(TriangleUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 13\n              }, this) : /*#__PURE__*/_jsxDEV(TriangleDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 10\n            }, this)]\n          }, column, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n_s(ArtistTable, \"s+4qErDg7o+qGA6llGbMYmu0ioQ=\");\n_c = ArtistTable;\nexport default ArtistTable;\nvar _c;\n$RefreshReg$(_c, \"ArtistTable\");","map":{"version":3,"names":["Table","TableContainer","Tbody","Td","Th","Thead","Tr","React","TriangleDownIcon","TriangleUpIcon","useState","artistData","jsxDEV","_jsxDEV","ArtistTable","_s","artists","setArtists","sortOrder","setSortOrder","sortField","setSortField","columns","list","map","current","index","children","isNumeric","fileName","_jsxFileName","lineNumber","columnNumber","artist","album","genre","year","language","location","purchased","spotifyAlbumId","handleSort","event","console","log","target","textContent","variant","size","column","onClick","style","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/bryanmitchell/Documents/react-projects/my-vinyl-collection/src/components/ArtistTable.tsx"],"sourcesContent":["import {\n\tTable,\n\tTableContainer,\n\tTbody,\n\tTd,\n\tTfoot,\n\tTh,\n\tThead,\n\tTr,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\n\nimport { artistData } from \"./seed\";\n\nconst ArtistTable = () => {\n\tconst [artists, setArtists] = useState<AnyObject>(artistData);\n\tconst [sortOrder, setSortOrder] = useState<string>(\"asc\");\n\tconst [sortField, setSortField] = useState<string>(\"\");\n\tconst columns = [\n\t\t\"#\",\n\t\t\"Artist\",\n\t\t\"Album\",\n\t\t\"Genre\",\n\t\t\"Year\",\n\t\t\"Language\",\n\t\t\"Location\",\n\t\t\"Purchased\",\n\t];\n\n\t// const fetchData = async (controller: AbortController) => {\n\t// \tconst resp = await fetch(url, {\n\t// \t\tsignal: controller.signal,\n\t// \t});\n\n\t// \tif (!resp.ok) throw new Error(\"Explotó\");\n\n\t// \tconst respData = await resp.json();\n\t// \tsetArtists(respData);\n\t// \tconsole.log(respData)\n\t// };\n\n\t// useEffect(() => {\n\t// \tlet controller = new AbortController();\n\n\t// \tfetchData(controller);\n\n\t// \treturn () => controller?.abort();\n\t// }, []);\n\n\tlet list = artists?.map((current: AnyObject, index: number) => (\n\t\t<Tr key={current.spotifyAlbumId}>\n\t\t\t<Td isNumeric>{index + 1}</Td>\n\t\t\t<Td>{current.artist}</Td>\n\t\t\t<Td>{current.album}</Td>\n\t\t\t<Td>{current.genre}</Td>\n\t\t\t<Td isNumeric>{current.year}</Td>\n\t\t\t<Td>{current.language}</Td>\n\t\t\t<Td>{current.location}</Td>\n\t\t\t<Td isNumeric>{current.purchased}</Td>\n\t\t</Tr>\n\t));\n\n\tconst handleSort = (event: any) => {\n\t\tconsole.log(\"event\", event.target.textContent);\n\n\t\tsetSortField(event.target.textContent);\n\t};\n\n\treturn (\n\t\t<TableContainer>\n\t\t\t<Table variant=\"striped\" size=\"sm\">\n\t\t\t\t<Thead>\n\t\t\t\t\t<Tr>\n\t\t\t\t\t\t{columns.map((column) => (\n\t\t\t\t\t\t\t<Th key={column} onClick={handleSort} style={{ \"cursor\": \"pointer\" }}>\n\t\t\t\t\t\t\t\t\t{column}\n\t\t\t\t\t\t\t\t\t<span style={{ paddingLeft: 4 + \"px\" }}>\n\t\t\t\t\t\t\t\t\t\t{sortField === column ? (\n\t\t\t\t\t\t\t\t\t\t\tsortOrder === \"asc\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<TriangleUpIcon />\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<TriangleDownIcon />\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tr>\n\t\t\t\t</Thead>\n\t\t\t\t<Tbody>{list}</Tbody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\ninterface AnyObject {\n\t[key: string]: any;\n}\n\nexport default ArtistTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}